<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:SlippiTV.Client"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:vm="clr-namespace:SlippiTV.Client.ViewModels"
             xmlns:converters="clr-namespace:SlippiTV.Client.Converters"
             xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:service="clr-namespace:SlippiTV.Shared.Types;assembly=SlippiTV.Shared"
             xmlns:views="clr-namespace:SlippiTV.Client.Views"
             xmlns:pages="clr-namespace:SlippiTV.Client.Pages"
             x:Class="SlippiTV.Client.Views.FriendView"
             x:DataType="{x:Type vm:FriendViewModel}">
    <ContentView.Resources>
        <ResourceDictionary>
            <toolkit:EnumToBoolConverter x:Key="LiveStatusToVisibilityConverter">
                <toolkit:EnumToBoolConverter.TrueValues>
                    <service:LiveStatus>Active</service:LiveStatus>
                </toolkit:EnumToBoolConverter.TrueValues>
            </toolkit:EnumToBoolConverter>
            <toolkit:EnumToBoolConverter x:Key="ActiveOrIdleToBoolConverter">
                <toolkit:EnumToBoolConverter.TrueValues>
                    <service:LiveStatus>Active</service:LiveStatus>
                    <service:LiveStatus>Idle</service:LiveStatus>
                </toolkit:EnumToBoolConverter.TrueValues>
            </toolkit:EnumToBoolConverter>
            <toolkit:IsStringNullOrEmptyConverter x:Key="IsStringNullOrEmptyConverter"/>
            <toolkit:IsStringNotNullOrEmptyConverter x:Key="StringToVisibilityConverter"/>
            <toolkit:IsNotNullConverter x:Key="IsNotNullConverter"/>
            <toolkit:IsEqualConverter x:Key="IsEqualConverter"/>
            <toolkit:IsNotEqualConverter x:Key="IsNotEqualConverter"/>
            <toolkit:InvertedBoolConverter x:Key="InverseBoolConverter"/>
            <converters:LiveStatusToColorConverter x:Key="LiveStatusToColorConverter"/>
            <converters:LiveStatusToToolTipConverter x:Key="LiveStatusToToolTipConverter"/>
            <converters:StageToImageConverter x:Key="StageToImageConverter" />
            <converters:BoolToNotificationColorConverter x:Key="BoolToNotificationColorConverter"/>
            <converters:BoolToNotificationIconConverter x:Key="BoolToNotificationIconConverter"/>
        </ResourceDictionary>
    </ContentView.Resources>
    <VerticalStackLayout Spacing="4" Padding="0">
        <Grid Padding="0,0,0,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <HorizontalStackLayout Grid.Column="0" HorizontalOptions="Start">
                <ImageButton Clicked="WatchFriendButton_Clicked" IsEnabled="{Binding LiveStatus, Converter={StaticResource ActiveOrIdleToBoolConverter}}"
                             VerticalOptions="Center" Margin="0" Padding="-4, 6, 0, 0" BackgroundColor="Transparent" >
                    <ImageButton.Source>
                        <FontImageSource Glyph="{mi:FluentFilled Icon=Tv24Filled, IconColor={DynamicResource AccentButtons}}"/>
                    </ImageButton.Source>
                </ImageButton>

                <HorizontalStackLayout HorizontalOptions="End" Margin="-8,0,0,0" IsEnabled="True" IsVisible="{Binding LiveStatus, Converter={StaticResource ActiveOrIdleToBoolConverter}}">
                    <Image MaximumHeightRequest="14" VerticalOptions="Center" Margin="0,4,0,0" ToolTipProperties.Text="Active Viewers">
                        <Image.Source>
                            <FontImageSource Glyph="{mi:FluentFilled Icon=Person24Filled, IconColor={StaticResource StatusGreen}}"/>
                        </Image.Source>
                    </Image>

                    <Label FontSize="10" VerticalTextAlignment="Center" Padding="2,4,5,2" Grid.ColumnSpan="1" Margin="0" HorizontalOptions="Start">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding ViewerCount}" TextColor="{StaticResource StatusGreen}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </HorizontalStackLayout>
            </HorizontalStackLayout>

            <HorizontalStackLayout Grid.Column="1" HorizontalOptions="Start">
                <!--Nickname-->
                <Label IsVisible="{Binding FriendSettings.Nickname, Converter={StaticResource StringToVisibilityConverter}}" 
                       Text="{Binding FriendSettings.Nickname}"
                       local:CursorProperties.Cursor="Help"
                       ToolTipProperties.Text="{Binding FriendSettings.ConnectCode}"
                       FontAttributes="Bold" FontSize="24" VerticalTextAlignment="Center"/>
                
                <!--Or -->
                
                <!-- Connect Code-->
                <Label IsVisible="{Binding FriendSettings.Nickname, Converter={StaticResource IsStringNullOrEmptyConverter}}" 
                       Text="{Binding FriendSettings.ConnectCode}"
                       FontAttributes="Bold" FontSize="24" VerticalTextAlignment="Center"/>
                
                <Image MaximumHeightRequest="12" VerticalOptions="Center" Margin="4,2,0,0" ToolTipProperties.Text="{Binding LiveStatus, Converter={StaticResource LiveStatusToToolTipConverter}}"
                    local:CursorProperties.Cursor="Help">
                    <Image.Source>
                        <FontImageSource Glyph="{mi:FluentFilled Icon=Circle24Filled}" Color="{Binding LiveStatus, Converter={StaticResource LiveStatusToColorConverter}}"/>
                    </Image.Source>
                </Image>
            </HorizontalStackLayout>

            <Grid ColumnSpacing="6"
                  Grid.Column="2" 
                  HorizontalOptions="Start"
                  VerticalOptions="Center" 
                  Padding="2,0,12,0"
                  Margin="16,0,8,0"
                  IsVisible="{Binding ActiveGameInfo.IsActive}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" BackgroundColor="Transparent" Padding="6" StrokeShape="RoundRectangle 8" MinimumWidthRequest="84" HeightRequest="56">
                    <VerticalStackLayout  HorizontalOptions="Center" VerticalOptions="Center">
                        <Button x:Name="PlayerLinkButton" 
                                IsVisible="{Binding ActiveGameInfo.PlayerDisplayName, Converter={StaticResource StringToVisibilityConverter}}"
                                Clicked="OpenPlayerWebpage"
                                VerticalOptions="Center"
                                HorizontalOptions="Center"
                                FontSize="14"
                                TextColor="{DynamicResource PrimaryText}"
                                BackgroundColor="Transparent" 
                                Text="{Binding ActiveGameInfo.PlayerDisplayName}"
                                ToolTipProperties.Text="{Binding ActiveGameInfo.PlayerConnectCode}"
                                Margin="0,0,0,2"
                                Padding="0">
                        </Button>
                        <CollectionView ItemsSource="{Binding ActiveGameInfo.PlayerStocksLeft}" ItemsLayout="HorizontalList" VerticalOptions="Start" Margin="0,2,0,0" MinimumHeightRequest="0" HeightRequest="18">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="{x:Type system:Int32}">
                                    <HorizontalStackLayout VerticalOptions="Start" Padding="0" Margin="0">
                                        <Image BindingContext="{Binding Source={RelativeSource AncestorType={x:Type views:FriendView}}, Path=BindingContext.ActiveGameInfo}"
                                               x:DataType="{x:Type vm:ActiveGameViewModel}"
                                               Source="{Binding Converter={converters:CharacterToImageSourceConverter IsOpponent=False}}" 
                                               WidthRequest="16" Margin="2,0,0,0" VerticalOptions="Start"/>
                                    </HorizontalStackLayout>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </VerticalStackLayout>
                </Border>

                <VerticalStackLayout Grid.Column="1" VerticalOptions="Center" ToolTipProperties.Text="{Binding ActiveGameInfo.Stage}">
                    <Label IsVisible="{Binding ActiveGameInfo.IsNetplay}" FontSize="12" VerticalTextAlignment="Start" Margin="0" HorizontalOptions="Center" Padding="0">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Game " />
                                <Span Text="{Binding ActiveGameInfo.GameNumber}" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label IsVisible="{Binding ActiveGameInfo.IsNetplay, Converter={StaticResource InverseBoolConverter}}" FontSize="12" VerticalTextAlignment="Start" Margin="0" HorizontalOptions="Center" Padding="0">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Local" />
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label IsVisible="True" FontSize="14" VerticalTextAlignment="Center" Margin="0,-4,0,0" HorizontalTextAlignment="Start" Padding="0" HorizontalOptions="Center" Grid.Column="1">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="vs."/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </VerticalStackLayout>

                <Border Grid.Column="2" BackgroundColor="Transparent" Padding="6" StrokeShape="RoundRectangle 8" MinimumWidthRequest="84" HeightRequest="56">
                    <VerticalStackLayout HorizontalOptions="Center" VerticalOptions="Center">
                        <Button x:Name="OpponentLinkButton" 
                                Clicked="OpenOpponentWebpage"
                                IsVisible="{Binding ActiveGameInfo.PlayerDisplayName, Converter={StaticResource StringToVisibilityConverter}}"
                                VerticalOptions="Center"
                                FontSize="14"
                                TextColor="{DynamicResource PrimaryText}"
                                BackgroundColor="Transparent"
                                Text="{Binding ActiveGameInfo.OpponentDisplayName}" 
                                ToolTipProperties.Text="{Binding ActiveGameInfo.OpponentConnectCode}"
                                Margin="0,0,0,2"
                                Padding="0">
                        </Button>
                        <CollectionView ItemsSource="{Binding ActiveGameInfo.OpponentStocksLeft}" ItemsLayout="HorizontalList" VerticalOptions="Start" Margin="0,2,0,0" MinimumHeightRequest="0" HeightRequest="18">
                            <CollectionView.ItemTemplate>
                                <DataTemplate x:DataType="{x:Type system:Int32}">
                                    <HorizontalStackLayout VerticalOptions="Start" Padding="0" Margin="0">
                                        <Image BindingContext="{Binding Source={RelativeSource AncestorType={x:Type views:FriendView}}, Path=BindingContext.ActiveGameInfo}"
                                               x:DataType="{x:Type vm:ActiveGameViewModel}"
                                               Source="{Binding Converter={converters:CharacterToImageSourceConverter IsOpponent=True}}" 
                                               WidthRequest="16" Margin="2,0,0,0" VerticalOptions="Start"/>
                                    </HorizontalStackLayout>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </VerticalStackLayout>
                </Border>
            </Grid>

            <HorizontalStackLayout Grid.Column="3">
                <Image VerticalOptions="Center" ToolTipProperties.Text="Rearrange" local:CursorProperties.Cursor="Move">
                    <Image.Source>
                        <FontImageSource Glyph="{mi:FluentFilled Icon=GridDots24Filled}" Color="{DynamicResource Gray600}"/>
                    </Image.Source>
                </Image>
                <ImageButton VerticalOptions="Center" ToolTipProperties.Text="Alerts" Margin="0,0,-12,0" Padding="0">
                    <ImageButton.GestureRecognizers>
                        <TapGestureRecognizer Tapped="NotificationBell_Tapped" NumberOfTapsRequired="1"/>
                    </ImageButton.GestureRecognizers>
                    <ImageButton.Source>
                        <FontImageSource Glyph="{mi:FluentFilled Icon={Binding FriendSettings.NotificationsEnabled, Converter={StaticResource BoolToNotificationIconConverter}}, 
                                                                 IconColor={Binding FriendSettings.NotificationsEnabled, Converter={StaticResource BoolToNotificationColorConverter}}}"/>
                    </ImageButton.Source>
                </ImageButton>
                <ImageButton x:Name="FriendsMore" VerticalOptions="Center" Margin="0" Padding="0,8,0,0" Grid.Column="4" HorizontalOptions="End">
                    <ImageButton.GestureRecognizers>
                        <TapGestureRecognizer Tapped="FriendsMore_Tapped" NumberOfTapsRequired="1"/>
                    </ImageButton.GestureRecognizers>
                    <ImageButton.Source>
                        <FontImageSource Glyph="{mi:FluentFilled Icon=MoreHorizontal24Filled, IconColor={DynamicResource AccentButtons}}"/>
                    </ImageButton.Source>
                </ImageButton>
            </HorizontalStackLayout>
        </Grid>
        <BoxView HeightRequest="1" IsVisible="{Binding IsBeingDraggedOver}">
            <BoxView.Triggers>
                <DataTrigger TargetType="BoxView" Binding="{Binding IsBeingDraggedOver}" Value="True">
                    <Setter Property="BackgroundColor" Value="{StaticResource GCPurpleTertiary}"/>
                </DataTrigger>
            </BoxView.Triggers>
        </BoxView>
        <VerticalStackLayout.GestureRecognizers>
            <DragGestureRecognizer
                    CanDrag="True"
                    DragStartingCommand="{Binding BindingContext.ItemDraggedCommand, Source={RelativeSource AncestorType={x:Type pages:FriendsPage}}}"
                    DragStartingCommandParameter="{Binding}"/>
            <DropGestureRecognizer
                    AllowDrop="True"
                    DragLeaveCommand="{Binding BindingContext.ItemDragLeaveCommand, Source={RelativeSource AncestorType={x:Type pages:FriendsPage}}}"
                    DragLeaveCommandParameter="{Binding}"
                    DragOverCommand="{Binding BindingContext.ItemDraggedOverCommand, Source={RelativeSource AncestorType={x:Type pages:FriendsPage}}}"
                    DragOverCommandParameter="{Binding}"
                    DropCommand="{Binding BindingContext.ItemDroppedCommand, Source={RelativeSource AncestorType={x:Type pages:FriendsPage}}}"
                    DropCommandParameter="{Binding}"/>
        </VerticalStackLayout.GestureRecognizers>
    </VerticalStackLayout>
</ContentView>
