<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:SlippiTV.Client.ViewModels"
             xmlns:mi="http://www.aathifmahir.com/dotnet/2022/maui/icons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:SlippiTV.Client"
             xmlns:shared="clr-namespace:SlippiTV.Shared.Types;assembly=SlippiTV.Shared"
             xmlns:versions="clr-namespace:SlippiTV.Shared.Versions;assembly=SlippiTV.Shared"
             xmlns:views="clr-namespace:SlippiTV.Client.Views"
             x:Class="SlippiTV.Client.Pages.SettingsPage"
             Title="Settings"
             x:DataType="{x:Type vm:SettingsViewModel}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/Colors.xaml" />
                <ResourceDictionary Source="../Resources/Styles/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Border">
                <Setter Property="BackgroundColor" Value="{DynamicResource BGSecondary}"/>
                <Setter Property="StrokeShape" Value="RoundRectangle 8"/>
            </Style>
            <Style TargetType="HorizontalStackLayout">
                <Setter Property="HeightRequest" Value="36"/>
                <Setter Property="Spacing" Value="12"/>
            </Style>
            <toolkit:IsStringNotNullOrEmptyConverter x:Key="StringToVisibilityConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid Padding="12,12,12,2">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Grid Margin="0,12,0,24" Grid.Row="0" HeightRequest="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <Label VerticalTextAlignment="Center" LineBreakMode="CharacterWrap" VerticalOptions="Center" Grid.Column="0">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Your Connection Info: " FontAttributes="Bold" FontSize="20"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <HorizontalStackLayout Grid.Column="3" Spacing="12" VerticalOptions="Center" HeightRequest="48">
                    <ImageButton MaximumHeightRequest="10" Padding="0" Margin="0" VerticalOptions="Center"
                                 Clicked="RefreshConnectInfo_Clicked">
                        <ImageButton.Source>
                            <FontImageSource Glyph="{mi:FluentFilled Icon=ArrowClockwise24Filled}" Color="{StaticResource StaticIconPrimary}" Size="20" />
                        </ImageButton.Source>
                    </ImageButton>
                    <Border>
                        <Label VerticalTextAlignment="Center" LineBreakMode="CharacterWrap" Padding="18,0,18,0">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Settings.StreamMeleeConnectCode}" FontSize="12" TextColor="{DynamicResource TextSecondary}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </Border>
                    <Border IsVisible="{Binding Settings.StreamMeleeDisplayName, Converter={StaticResource StringToVisibilityConverter}}">
                        <Label VerticalTextAlignment="Center" LineBreakMode="CharacterWrap" Padding="18,0,18,0">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{Binding Settings.StreamMeleeDisplayName}" FontSize="12" TextColor="{DynamicResource TextSecondary}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </Border>
                </HorizontalStackLayout>
                <ImageButton x:Name="EditConnectCodeButton" 
                                Clicked="EditConnectCodeButton_Clicked"
                                IsVisible="{Binding Settings.ShowConnectCodeEdit}" 
                                BackgroundColor="Transparent" 
                                Aspect="AspectFit" 
                                HeightRequest="4" 
                                WidthRequest="4"
                                Margin="-4,-4,0,0"
                                Grid.Column="4">
                    <ImageButton.Source>
                        <FontImageSource Glyph="{mi:FluentFilled Icon=Edit24Filled, IconColor={StaticResource StaticIconPrimary}}"/>
                    </ImageButton.Source>
                </ImageButton>
            </Grid>
            <BoxView HeightRequest="1" Grid.Row="1" VerticalOptions="End"/>
        </Grid>

        
        <Grid Margin="0,18,0,6" Grid.Row="1" RowSpacing="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Label VerticalTextAlignment="Center" LineBreakMode="WordWrap" Grid.Column="0" Grid.Row="0" Padding="0,0,0,0">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="{Binding MeleeISOPathLabelText}" FontAttributes="Bold" FontSize="20"/>
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <Grid Grid.Column="0" Grid.Row="1" Margin="0,0,0,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Border Grid.Column="0">
                    <Label VerticalTextAlignment="Center" HorizontalOptions="Start" LineBreakMode="TailTruncation"  Padding="18,0,18,0" WidthRequest="360">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Settings.WatchMeleeISOPath}" FontSize="12" TextColor="{DynamicResource TextSecondary}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </Border>
                <Button x:Name="MeleeIsoBrowseButton" 
                        Text="Browse"
                        FontSize="14"
                        Clicked="MeleeIsoBrowseButton_Clicked" 
                        VerticalOptions="Center"
                        HorizontalOptions="End"
                        Grid.Column="1"
                        Padding="16,4,16,8"
                        CornerRadius="8"
                        TextColor="{DynamicResource TextQuat}"
                        BackgroundColor="{DynamicResource BGButton}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroupList>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value=".85"/>
                                        <Setter Property="Scale" Value=".98"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </VisualStateManager.VisualStateGroups>
                </Button>
            </Grid>
            <BoxView HeightRequest="1" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,0,0,6"/>
        </Grid>

        
        <Grid Margin="0,6,0,6" Grid.Row="2" RowSpacing="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <Label VerticalTextAlignment="Center" LineBreakMode="WordWrap" Grid.Row="0">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="{Binding WatchDolphinPathLabelText}" FontSize="20" FontAttributes="Bold"/>
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <Grid Grid.Row="1" Margin="0,6,0,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <Border VerticalOptions="Center" HorizontalOptions="Start" WidthRequest="360" HeightRequest="36" Grid.Column="0">
                    <Label VerticalTextAlignment="Center" LineBreakMode="TailTruncation"  Padding="18,0,18,0" TextColor="{DynamicResource TextSecondary}">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding Settings.WatchDolphinPath}" TextColor="{DynamicResource TextSecondary}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </Border>
                <Button x:Name="WatchDolphinBrowseButton" 
                    IsVisible="{Binding Settings.ShowWatchDolphinEdit}"
                    Text="Browse"
                    FontSize="14"
                    Clicked="WatchDolphinBrowseButton_Clicked"
                    VerticalOptions="Center"
                    HorizontalOptions="End"
                    Grid.Column="1" 
                    Padding="16,4,16,8"
                    CornerRadius="8"
                    BackgroundColor="{DynamicResource BGButton}"
                    TextColor="{DynamicResource TextQuat}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroupList>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Property="Opacity" Value=".85"/>
                                        <Setter Property="Scale" Value=".98"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateGroupList>
                    </VisualStateManager.VisualStateGroups>
                </Button>
            </Grid>
            <BoxView HeightRequest="1" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,0,0,6"/>
        </Grid>


        <Grid Margin="0,6,0,6" Grid.Row="3" RowSpacing="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="0,0,0,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label VerticalTextAlignment="Center" HorizontalOptions="Start" LineBreakMode="CharacterWrap" Grid.Column="0">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Current SlippiTV Version: " FontAttributes="Bold" FontSize="20"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <HorizontalStackLayout Grid.Column="1" HorizontalOptions="End">
                    <Border>
                        <Label VerticalTextAlignment="Center" LineBreakMode="NoWrap" Padding="18,0,18,0">
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="{x:Static versions:ClientVersion.SlippiClientVersion}" TextColor="{DynamicResource TextSecondary}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </Border>
                    <Button x:Name="UpdateSlippiTVButton" 
                        IsVisible="{Binding ShellViewModel.RequiresUpdate}"
                        Text="Update"
                        Clicked="UpdateSlippiTV_Clicked"
                        VerticalOptions="Center"
                        Padding="16,4,16,8"
                        CornerRadius="8"
                        TextColor="{DynamicResource TextPrimary}"
                        BackgroundColor="{DynamicResource BGButton}"/>
                </HorizontalStackLayout>

            </Grid>
            <BoxView HeightRequest="1" Margin="0,0,0,0" Grid.ColumnSpan="2" Grid.Row="1"/>
        </Grid>


        <Grid Margin="0,0,0,0" VerticalOptions="End" Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Label VerticalTextAlignment="Center" LineBreakMode="CharacterWrap">
                <Label.FormattedText>
                    <FormattedString>
                        <Span Text="Theme" FontAttributes="Bold" FontSize="20"/>
                    </FormattedString>
                </Label.FormattedText>
            </Label>
            <HorizontalStackLayout Spacing="0" HorizontalOptions="End" Grid.Column="1" Padding="0">
                <!--Click on the button to select your theme, icon shows color preview of theme, popup text shows name of theme-->
                <Grid>
                    <Path Fill="{StaticResource DarkThemeButtonStroke}" Margin="0,0,0,0" VerticalOptions="Center">
                        <Path.Data>
                            <EllipseGeometry Center="22.875,18.875" RadiusX="12" RadiusY="12"/>
                        </Path.Data>
                    </Path>
                    <ImageButton x:Name="ButtonDarkTheme"
                        Clicked="UpdateThemeDark"
                        VerticalOptions="Center"
                        BackgroundColor="Transparent" 
                        Aspect="AspectFit"
                        ToolTipProperties.Text="Dark">
                        <ImageButton.Source>
                            <FontImageSource Glyph="{mi:FluentFilled Icon=Circle24Filled, IconColor={StaticResource DarkThemeButton}}" Size="24"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Grid>

                <Grid>
                    <Path Fill="{StaticResource GCPurpleThemeButtonStroke}" Margin="0,0,0,0" VerticalOptions="Center">
                        <Path.Data>
                            <EllipseGeometry Center="22.875,18.875" RadiusX="12" RadiusY="12"/>
                        </Path.Data>
                    </Path>
                    <ImageButton x:Name="ButtonGCPurpleTheme"
                                Clicked="UpdateThemeGCPurple"
                                VerticalOptions="Center"
                                BackgroundColor="Transparent"
                                Aspect="AspectFit"
                                ToolTipProperties.Text="GC Purple">
                        <ImageButton.Source>
                            <FontImageSource Glyph="{mi:FluentFilled Icon=Circle24Filled, IconColor={StaticResource GCPurpleThemeButton}}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Grid>

                <Grid>
                    <Path Fill="{StaticResource LightThemeButtonStroke}" Margin="0,0,0,0" VerticalOptions="Center">
                        <Path.Data>
                            <EllipseGeometry Center="22.875,18.875" RadiusX="12" RadiusY="12"/>
                        </Path.Data>
                    </Path>
                    <ImageButton x:Name="ButtonLightTheme"
                                Clicked="UpdateThemeLight"
                                VerticalOptions="Center"
                                BackgroundColor="Transparent"
                                Aspect="AspectFit"
                                ToolTipProperties.Text="Light">
                        <ImageButton.Source>
                            <FontImageSource Glyph="{mi:FluentFilled Icon=Circle24Filled, IconColor={StaticResource LightThemeButton}}"/>
                        </ImageButton.Source>
                    </ImageButton>
                </Grid>
            </HorizontalStackLayout>
        </Grid>

        <views:BottomBar Grid.Row="5" BindingContext="{Binding ShellViewModel}" HeightRequest="20" VerticalOptions="End"/>
    </Grid>
</ContentPage>